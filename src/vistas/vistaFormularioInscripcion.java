package vistas;

import accesoADatos.Conexion;
import accesoADatos.InscripcionData;
import entidades.Alumno;
import entidades.Inscripcion;
import entidades.Materia;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;
import librerias.FuncionesComunes;

/**
 *
 * @author Martin
 */
public class vistaFormularioInscripcion extends javax.swing.JInternalFrame {

    private ArrayList<Alumno> listaAlumno;
    private ArrayList<Materia> listaMateria;
    private accesoADatos.InscripcionData dataInscripcion;
    private accesoADatos.AlumnoData dataAlumno;
    private  DefaultTableModel modeloTable;
    private Alumno alumnoSelec;

    /**
     * Creates new form vistaFormularioInscripcion
     */
    public vistaFormularioInscripcion() {

        initComponents();
        dataAlumno = new accesoADatos.AlumnoData();
        dataInscripcion = new InscripcionData();
        listaAlumno = new ArrayList<>();
        listaAlumno = (ArrayList<Alumno>) dataAlumno.listarAlumnos();
        btnInicializar();

        if (listaAlumno.size() > 0) {
            armadoComboBox();
            armarEncabezado();
            alumnoActual();

        } else {
            this.dispose();
            librerias.FuncionesComunes.vistaDialogo("No hay alumnos o materia con las que interactura. Ingrese datos en sus respectivos formularios.", 0);

        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPnlContenedorFrm = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTblData = new javax.swing.JTable();
        jCbAlumnos = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jRbInscriptas = new javax.swing.JRadioButton();
        jRbNoInscriptas = new javax.swing.JRadioButton();
        jPanel1 = new javax.swing.JPanel();
        jBtnInscripcion = new javax.swing.JButton();
        jBtnAnular = new javax.swing.JButton();
        jBtnSalir = new javax.swing.JButton();

        setIconifiable(true);
        setResizable(true);
        setTitle("Formulario Inscripcion");

        jLabel1.setText("Seleccione un alumno:");

        jTblData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3"
            }
        ));
        jScrollPane1.setViewportView(jTblData);

        jCbAlumnos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCbAlumnosActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setText("Listado de Materias");

        jRbInscriptas.setText("Materias Inscriptas");
        jRbInscriptas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRbInscriptasActionPerformed(evt);
            }
        });

        jRbNoInscriptas.setText("Materia no inscriptas");
        jRbNoInscriptas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRbNoInscriptasActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPnlContenedorFrmLayout = new javax.swing.GroupLayout(jPnlContenedorFrm);
        jPnlContenedorFrm.setLayout(jPnlContenedorFrmLayout);
        jPnlContenedorFrmLayout.setHorizontalGroup(
            jPnlContenedorFrmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPnlContenedorFrmLayout.createSequentialGroup()
                .addGroup(jPnlContenedorFrmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPnlContenedorFrmLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPnlContenedorFrmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 382, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPnlContenedorFrmLayout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jCbAlumnos, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(jPnlContenedorFrmLayout.createSequentialGroup()
                        .addGap(107, 107, 107)
                        .addComponent(jLabel2)))
                .addContainerGap(18, Short.MAX_VALUE))
            .addGroup(jPnlContenedorFrmLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jRbInscriptas)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jRbNoInscriptas)
                .addGap(97, 97, 97))
        );
        jPnlContenedorFrmLayout.setVerticalGroup(
            jPnlContenedorFrmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPnlContenedorFrmLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPnlContenedorFrmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jCbAlumnos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addGroup(jPnlContenedorFrmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRbInscriptas)
                    .addComponent(jRbNoInscriptas))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14))
        );

        jBtnInscripcion.setText("Inscripcion");
        jBtnInscripcion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnInscripcionActionPerformed(evt);
            }
        });

        jBtnAnular.setText("Anular Inscripcion");
        jBtnAnular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnAnularActionPerformed(evt);
            }
        });

        jBtnSalir.setText("Salir");
        jBtnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnSalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jBtnInscripcion)
                .addGap(18, 18, 18)
                .addComponent(jBtnAnular, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addComponent(jBtnSalir)
                .addGap(16, 16, 16))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBtnInscripcion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jBtnAnular, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jBtnSalir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(14, 14, 14))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPnlContenedorFrm, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPnlContenedorFrm, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBtnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnSalirActionPerformed
        Conexion.getDesconexion();
        this.dispose();
    }//GEN-LAST:event_jBtnSalirActionPerformed

    private void jBtnInscripcionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnInscripcionActionPerformed
        inscripcion();
    }//GEN-LAST:event_jBtnInscripcionActionPerformed

    private void jCbAlumnosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCbAlumnosActionPerformed
        alumnoSelec = null;
         
        alumnoActual();
         if (jRbInscriptas.isSelected()){
             materias(true);
             resetBtn(true);
         }

    }//GEN-LAST:event_jCbAlumnosActionPerformed

    private void jRbInscriptasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRbInscriptasActionPerformed

        if (jRbNoInscriptas.isSelected()) {
            jRbNoInscriptas.setSelected(false);
        }

        if (jRbInscriptas.isSelected()) {
            resetBtn(true);
            materias(true);
        }
    }//GEN-LAST:event_jRbInscriptasActionPerformed

    private void jRbNoInscriptasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRbNoInscriptasActionPerformed
        if (jRbInscriptas.isSelected()) {
            jRbInscriptas.setSelected(false);
        }

        if (jRbNoInscriptas.isSelected()) {
            resetBtn(false);
            materias(false);
        }
    }//GEN-LAST:event_jRbNoInscriptasActionPerformed

    private void jBtnAnularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnAnularActionPerformed
       anularInscripcion();
    }//GEN-LAST:event_jBtnAnularActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtnAnular;
    private javax.swing.JButton jBtnInscripcion;
    private javax.swing.JButton jBtnSalir;
    private javax.swing.JComboBox<Alumno> jCbAlumnos;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPnlContenedorFrm;
    private javax.swing.JRadioButton jRbInscriptas;
    private javax.swing.JRadioButton jRbNoInscriptas;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTblData;
    // End of variables declaration//GEN-END:variables

    private void armadoComboBox() {
        for (Alumno alumno : listaAlumno) {
            jCbAlumnos.addItem(alumno);

        }
    }

    private void armarEncabezado() {
        modeloTable=librerias.FuncionesComunes.ArmadoEncabezados(entidades.EncabezadoMateria.ID);
        jTblData.setModel(modeloTable);
        librerias.FuncionesComunes.alinearCabeceras(2, "right", jTblData);

    }

    private void alumnoActual() {
        alumnoSelec = (Alumno) jCbAlumnos.getSelectedItem();
    }

    private void btnInicializar() {
        jBtnAnular.setEnabled(false);
        jBtnInscripcion.setEnabled(false);
    }

    private void resetBtn(boolean radio) {

        if (radio) {
            jBtnAnular.setEnabled(true);
            jBtnInscripcion.setEnabled(false);
        } else {
            jBtnAnular.setEnabled(false);
            jBtnInscripcion.setEnabled(true);
        }
    }

    private void materias(boolean radio) {
          listaMateria=null;
        //inscriptas
        if (radio) {
            
            listaMateria = dataInscripcion.obtenerMateriasCursadas(alumnoSelec.getIdAlumno());

            if (listaMateria.size() > 0) {
                FuncionesComunes.eliminarFilas(jTblData);
                for (Materia materia : listaMateria) {
                    modeloTable.addRow(new Object[]{
                        materia.getIdMateria(),
                        materia.getAño(),
                        materia.getNombre()
                    });
                }
            }else{
                FuncionesComunes.vistaDialogo("El alumno no esta inscripto a nada", 1);
            }

        } else {
           
            listaMateria = dataInscripcion.obtenerMateriasNoCursadas(alumnoSelec.getIdAlumno());
           
            if (listaMateria.size() > 0) {
                FuncionesComunes.eliminarFilas(jTblData);
                for (Materia materia : listaMateria) {
                    modeloTable.addRow(new Object[]{
                        materia.getIdMateria(),
                        materia.getAño(),
                        materia.getNombre()
                    });
                }
            }else{
                FuncionesComunes.vistaDialogo("Todas la materias estan ciendo cursada", 1);
            }    
        }
    }

    private void anularInscripcion() {
        
        int idMateria=obtenerMateria();
        boolean res= dataInscripcion.borrarInscripcionMateriaALumno(alumnoSelec.getIdAlumno(), idMateria);
        if(res){
           materias(true);
        }
    }
    
    private void inscripcion() {
        
        int idMateria=obtenerMateria();
        Materia materia=new Materia();
        materia.setIdMateria(idMateria);
        
        Inscripcion inscripcion=new Inscripcion(alumnoSelec,materia,0.00);
        dataInscripcion.guardarInscripcion(inscripcion);
         materias(false);
    }
    
    
    private int  obtenerMateria(){
       int  idMateria=-1;
        int rowIndex = jTblData.getSelectedRow();
        if (rowIndex != -1) {
            // Obtener el valor de un campo específico en la fila seleccionada
             idMateria =Integer.parseInt( jTblData.getValueAt(rowIndex, 0).toString());
            
        }
        return  idMateria;
    }

}
